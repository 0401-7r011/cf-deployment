#!/bin/bash

set -e -x

pushd $(dirname $0)
  SCRIPT_DIR=$(pwd)
popd

CF_DEPLOYMENT_DIR=$(cd $SCRIPT_DIR/.. && pwd)

RELEASE_DIR=${SCRIPT_DIR}/../outputs/releases
rm -rf ${RELEASE_DIR}
mkdir -p ${RELEASE_DIR}

OUTPUT_DIR=${SCRIPT_DIR}/../outputs/create_release
rm -rf ${OUTPUT_DIR}
mkdir -p ${OUTPUT_DIR}

if [ $# -ne 3 ]; then
  echo "Usage: create_releases PATH_TO_CF_RELEASE PATH_TO_ETCD_RELEASE PATH_TO_CONSUL_RELEASE"
  exit 1
fi

CF_RELEASE_PATH=$1
ETCD_RELEASE_PATH=$2
CONSUL_RELEASE_PATH=$3

if [ ! -d ${CF_RELEASE_PATH} ]; then
  echo "PATH_TO_CF_RELEASE is invalid"
  exit 1
fi

if [ ! -e ${ETCD_RELEASE_PATH} ]; then
  echo "PATH_TO_ETCD_RELEASE is invalid"
  exit 1
fi

if [ ! -e ${CONSUL_RELEASE_PATH} ]; then
  echo "CONSUL_RELEASE_PATH is invalid"
  exit 1
fi


export BOSH_USE_BUNDLER=true

date=$(date +%s)

pushd ${CF_RELEASE_PATH}
  CF_RELEASE_VERSION=$(tail releases/**/index.yml | grep " version" | tail -1 | grep -E -o "[0-9.]+")+dev.${date}
  bosh -n create release --force --name cf --version ${CF_RELEASE_VERSION} --with-tarball 2>&1 | tee ${OUTPUT_DIR}/cf.out
  EXIT_STATUS=${PIPESTATUS[0]}

  if [ ! ${EXIT_STATUS} -eq 0 ]; then
    echo "Failed to create cf release"
    exit 1
  fi

  CF_RELEASE_TARBALL=$(grep "Release tarball" ${OUTPUT_DIR}/cf.out | sed 's/.*: //')

  mv ${CF_RELEASE_TARBALL} ${RELEASE_DIR}/cf.tgz
popd

if [ -d ${ETCD_RELEASE_PATH} ]; then
  pushd ${ETCD_RELEASE_PATH}
    ETCD_VERSION=$(tail releases/**/index.yml | grep " version" | tail -1 | grep -E -o "[0-9.]+")+dev.${date}
    bosh -n create release --force --name etcd --version ${ETCD_VERSION} --with-tarball 2>&1 | tee ${OUTPUT_DIR}/etcd.out
    EXIT_STATUS=${PIPESTATUS[0]}

    if [ ! ${EXIT_STATUS} -eq 0 ]; then
      echo "Failed to create etcd release"
      exit 1
    fi

    ETCD_RELEASE_TARBALL=$(grep "Release tarball" ${OUTPUT_DIR}/etcd.out | sed 's/.*: //')

    mv ${ETCD_RELEASE_TARBALL} ${RELEASE_DIR}
  popd
else
  ETCD_VERSION=$(tar -x -O -f ${ETCD_RELEASE_PATH} ./release.MF | grep -E '^version:' | grep -o -E "[0-9.]*[0-9]")
  cp ${ETCD_RELEASE_PATH} ${RELEASE_DIR}/etcd.tgz
fi

if [ -d ${CONSUL_RELEASE_PATH} ]; then
  pushd ${CONSUL_RELEASE_PATH}
    if [ -d releases/**/index.yml]; then
      CONSUL_VERSION=$(tail releases/**/index.yml | grep " version" | tail -1 | grep -E -o "[0-9.]+")+dev.${date}
    else
      CONSUL_VERSION="0"+dev.${date}
    fi
    bosh -n create release --force --name consul --version ${CONSUL_VERSION} --with-tarball 2>&1 | tee ${OUTPUT_DIR}/consul.out
    EXIT_STATUS=${PIPESTATUS[0]}

    if [ ! ${EXIT_STATUS} -eq 0 ]; then
      echo "Failed to create etcd release"
      exit 1
    fi

    CONSUL_RELEASE_TARBALL=$(grep "Release tarball" ${OUTPUT_DIR}/consul.out | sed 's/.*: //')

    mv ${CONSUL_RELEASE_TARBALL} ${RELEASE_DIR}
  popd
else
  CONSUL_VERSION=$(tar -x -O -f ${CONSUL_RELEASE_PATH} ./release.MF | grep -E '^version:' | grep -o -E "[0-9.]*[0-9]")
  cp ${CONSUL_RELEASE_PATH} ${RELEASE_DIR}/consul.tgz
fi

cat > $CF_DEPLOYMENT_DIR/stubs/versions.yml <<EOF
---
releases:
- name: cf
  version: ${CF_RELEASE_VERSION}
- name: etcd
  version: ${ETCD_VERSION}
- name: consul
  version: ${CONSUL_VERSION}
EOF
