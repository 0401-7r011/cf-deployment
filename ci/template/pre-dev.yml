#@ load("@ytt:data", "data")

#@ def delete_deployment(env):
task: delete-deployment
file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
input_mapping:
  bbl-state: relint-envs
params:
  BBL_STATE_DIR: #@ "environments/test/{}/bbl-state".format(env)
#@ end

#@ def manage_gcp_dns(action):
task: #@ action + "-gcp-dns"
file: runtime-ci/tasks/manage-gcp-dns/task.yml
input_mapping:
  bbl-state: relint-envs
params:
  BBL_STATE_DIR: environments/test/pre-dev/bbl-state
  GCP_DNS_SERVICE_ACCOUNT_KEY: ((concourse_gcp_service_account_json))
  GCP_DNS_ZONE_NAME: test-relint-rocks
  GCP_DNS_RECORD_SET_NAME: pre-dev.test.relint.rocks
  ACTION: #@ action
#@ end

---
groups:
- name: update-releases
  jobs:
  #@ for r in data.values.baseReleases:
  - #@ "update-" + r.name
  #@ end

resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:
#@ for r in data.values.baseReleases:
- name: #@ r.name + "-release"
  type: bosh-io-release
  source:
    repository: #@ r.repository

#@ end
- name: cf-deployment-release-candidate
  type: git
  source:
    branch: release-candidate
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: ((cf_deployment_readwrite_deploy_key.private_key))

- name: cf-deployment-develop
  type: git
  source:
    branch: pre-dev-test
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: ((cf_deployment_readwrite_deploy_key.private_key))

- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-xenial-go_agent
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git

- name: relint-envs
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/relint-envs.git
    private_key: ((hagrid_env_readwrite_deploy_key.private_key))

#@ for r in data.values.baseReleases:
- name: #@ r.name + "-release-gcs"
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: #@ r.name + "-[^-]+-ubuntu-xenial-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz"

#@ end
jobs:
#@ for r in data.values.baseReleases:
- name: #@ "update-" + r.name
  serial_groups:
  - update-release
  public: true
  plan:
  - aggregate:
    - get: #@ r.name + "-release"
      trigger: false
      params:
        tarball: false
    - get: cf-deployment-release-candidate
    - get: cf-deployment-develop
    - get: stemcell
      params:
        tarball: false
    - get: cf-deployment-concourse-tasks
    - get: runtime-ci
    - get: relint-envs
  - task: #@ "update-release-{}-release-candidate".format(r.name)
    file: runtime-ci/tasks/update-single-manifest-release/task.yml
    input_mapping:
      deployment-configuration: cf-deployment-release-candidate
      release: #@ r.name + "-release"
    params:
      RELEASE_NAME: #@ r.name
  - task: #@ "update-additional-ops-files-{}-release-candidate".format(r.name)
    file: runtime-ci/tasks/update-single-opsfile-release/task.yml
    input_mapping:
      current-commit-message: commit-message
      original-ops-file: cf-deployment-release-candidate
      release: #@ r.name + "-release"
    params:
      RELEASE_NAME: #@ r.name
  - do:
    - task: bbl-up
      file: cf-deployment-concourse-tasks/bbl-up/task.yml
      params:
        BBL_STATE_DIR: environments/test/pre-dev/bbl-state
        BBL_IAAS: gcp
        BBL_ENV_NAME: pre-dev
        BBL_GCP_SERVICE_ACCOUNT_KEY: environments/test/pre-dev/google_account_creds.json
        BBL_GCP_REGION: us-central1
        BBL_LB_CERT: ((pre_dev_cf_lb_cert.certificate))
        BBL_LB_KEY: ((pre_dev_cf_lb_cert.private_key))
        LB_DOMAIN: pre-dev.test.relint.rocks
      input_mapping:
        bbl-state: relint-envs
        bbl-config: relint-envs
      ensure:
        put: relint-envs
        params:
          repository: updated-bbl-state
          rebase: true
    - #@ manage_gcp_dns("add")
    - task: deploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        bbl-state: relint-envs
        cf-deployment: updated-deployment-manifest
        ops-files: cf-deployment-release-candidate
        vars-files: relint-envs
      params:
        BBL_STATE_DIR: environments/test/pre-dev/bbl-state
        SYSTEM_DOMAIN: pre-dev.test.relint.rocks
        OPS_FILES: |
          operations/experimental/fast-deploy-with-downtime-and-danger.yml
        REGENERATE_CREDENTIALS: false
        BOSH_DEPLOY_ARGS: "--parallel 50"
    - task: #@ "export-compiled-release-" + r.name
      file: runtime-ci/tasks/export-compiled-release-tarball/task.yml
      input_mapping:
        bbl-state: relint-envs
        manifest: updated-deployment-manifest
      params:
        BBL_STATE_DIR: environments/test/pre-dev/bbl-state
        RELEASE_NAME: #@ r.name
    - task: #@ "update-release-{}-develop".format(r.name)
      file: runtime-ci/tasks/update-single-manifest-release/task.yml
      input_mapping:
        deployment-configuration: cf-deployment-develop
        release: #@ r.name + "-release"
      params:
        RELEASE_NAME: #@ r.name
    - task: #@ "update-additional-ops-files-{}-develop".format(r.name)
      file: runtime-ci/tasks/update-single-opsfile-release/task.yml
      input_mapping:
        current-commit-message: commit-message
        original-ops-file: cf-deployment-develop
        release: #@ r.name + "-release"
      params:
        RELEASE_NAME: #@ r.name
    - task: #@ "update-compiled-releases-ops-" + r.name
      file: runtime-ci/tasks/update-single-compiled-release/task.yml
      input_mapping:
        original-compiled-releases-ops-file: cf-deployment-develop
        release: #@ r.name + "-release"
        current-commit-message: commit-message
      params:
        RELEASE_NAME: #@ r.name
        ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
        UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
    - task: combine-inputs
      file: runtime-ci/tasks/combine-inputs/task.yml
      input_mapping:
        first-input: updated-compiled-releases-ops-file
        second-input: updated-ops-file
    - task: commit-generated-manifest-and-ops
      file: runtime-ci/tasks/commit-generated-manifest/task.yml
      input_mapping:
        manifest: updated-deployment-manifest
        ops-file: combined-inputs
        repo: cf-deployment-develop
      params:
        COMMIT_ALL_OPS_FILES: true
        MANIFEST_DESTINATION: cf-deployment.yml
        MANIFEST_NAME: cf-deployment.yml
    - put: #@ r.name + "-release-gcs"
      params:
        file: compiled-release-tarball/*.tgz
        predefined_acl: publicRead
    - put: cf-deployment-develop
      params:
        rebase: true
        repository: updated-repo
    ensure:
      do:
      - #@ delete_deployment("pre-dev")
      - #@ manage_gcp_dns("remove")
      - task: bbl-down
        file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
        input_mapping:
          bbl-state: relint-envs
        params:
          BBL_GCP_SERVICE_ACCOUNT_KEY: environments/test/pre-dev/google_account_creds.json
          BBL_STATE_DIR: environments/test/pre-dev/bbl-state
        ensure:
          put: relint-envs
          params:
            repository: updated-bbl-state
            rebase: true

#@ end
