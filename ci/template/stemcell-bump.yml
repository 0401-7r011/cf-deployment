#@ load("@ytt:data", "data")
#@ load("bbl-down.lib.yml", "bbl_down")
#@ load("bbl-up.lib.yml", "bbl_up")
#@ load("delete-deployment.lib.yml", "delete_deployment")
#@ load("manage-gcp-dns.lib.yml", "manage_gcp_dns")

---
resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: cf-deployment-master
  type: git
  source:
    branch: master-stemcell-test
    uri: git@github.com:cloudfoundry/cf-deployment.git
    private_key: ((cf_deployment_readwrite_deploy_key.private_key))

- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: relint-envs
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/relint-envs.git
    private_key: ((hagrid_env_readwrite_deploy_key.private_key))

- name: runtime-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/runtime-ci.git

- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-xenial-go_agent

#@ for r in data.values.baseReleases:
- name: #@ r.name + "-release-gcs"
  type: gcs-resource
  source:
    bucket: cf-deployment-compiled-releases
    json_key: ((concourse_gcp_service_account_json))
    regexp: #@ r.name + "-[^-]+-ubuntu-xenial-[^-]+-(\d+)-(\d+)-(\d+).*\.tgz"
#@ end

jobs:
#@ env = "pre-dev"
- name: update-stemcell-and-recompile-releases
  public: true
  serial_groups:
  - stemcell
  #@ for r in data.values.baseReleases:
  - #@ "update-" + r.name
  #@ end
  plan:
  - aggregate:
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment-master
    - get: relint-envs
    - get: runtime-ci
    - get: stemcell
      params:
        tarball: false
  - task: update-stemcell-manifest-section
    file: runtime-ci/tasks/update-stemcell-manifest-section/task.yml
    input_mapping:
      cf-deployment: cf-deployment-master
  - do:
    - #@ bbl_up(env)
    - #@ manage_gcp_dns("add", env)
    - task: upload-updated-stemcell
      file: cf-deployment-concourse-tasks/bosh-upload-stemcells/task.yml
      input_mapping:
        bbl-state: relint-envs
        cf-deployment: updated-cf-deployment
      params:
        BBL_STATE_DIR: environments/test/pre-dev/bbl-state
        INFRASTRUCTURE: google
    - task: deploy-cf
      file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
      input_mapping:
        bbl-state: relint-envs
        cf-deployment: updated-cf-deployment
        ops-files: updated-cf-deployment
        vars-files: relint-envs
      params:
        BBL_STATE_DIR: environments/test/pre-dev/bbl-state
        SYSTEM_DOMAIN: pre-dev.test.relint.rocks
        OPS_FILES: |
          operations/experimental/fast-deploy-with-downtime-and-danger.yml
        REGENERATE_CREDENTIALS: false
        BOSH_DEPLOY_ARGS: "--parallel 50"
    - task: run-errand-smoke-tests
      file: cf-deployment-concourse-tasks/run-errand/task.yml
      input_mapping:
        bbl-state: relint-envs
      params:
        BBL_STATE_DIR: environments/test/pre-dev/bbl-state
        ERRAND_NAME: smoke-tests
    - aggregate:
      #@ for s in data.values.baseReleases:
      - task: #@ "compile-release-" + s.name
        file: runtime-ci/tasks/compile-release-from-manifest/task.yml
        input_mapping:
          bbl-state: relint-envs
          manifest: updated-cf-deployment
        output_mapping:
          exported-release: #@ s.name + "-compiled-release-tarball"
        params:
          BBL_STATE_DIR: environments/test/pre-dev/bbl-state
          RELEASE_NAME: #@ s.name
        attempts: 3
      #@ end
    ensure:
      do:
      - #@ delete_deployment(env)
      - #@ manage_gcp_dns("remove", env)
      - #@ bbl_down(env)
  - task: update-stemcell
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: relintdockerhubpushbot/cf-deployment-concourse-tasks
          tag: latest
      inputs:
      - name: runtime-ci
        path: go/src/github.com/cloudfoundry/runtime-ci
      - name: cf-deployment
      - name: stemcell
      #@ for s in data.values.baseReleases:
      - name: #@ s.name + "-compiled-release-tarball"
      #@ end
      outputs:
      - name: updated-cf-deployment
      params:
        COMMIT_MESSAGE_PATH: commit-message.txt
        ORIGINAL_DEPLOYMENT_MANIFEST_PATH: cf-deployment.yml
        ORIGINAL_OPS_FILE_PATH: operations/use-compiled-releases.yml
        UPDATED_DEPLOYMENT_MANIFEST_PATH: cf-deployment.yml
        UPDATED_OPS_FILE_PATH: operations/use-compiled-releases.yml
      run:
        path: go/src/github.com/cloudfoundry/runtime-ci/tasks/update-stemcell/task
    input_mapping:
      cf-deployment: cf-deployment-master
  - aggregate:
    #@ for s in data.values.baseReleases:
    - put: #@ s.name + "-release-gcs"
      params:
        file: #@ s.name + "-compiled-release-tarball/*.tgz"
        predefined_acl: publicRead
      attempts: 3
    #@ end
  - put: cf-deployment-master
    params:
      rebase: true
      repository: updated-cf-deployment
