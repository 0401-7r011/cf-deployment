system_domain: (( properties.system_domain || "bosh-will-generate-me" ))
# Using an array index is dangerous.  Consider using an Ops file for this.
uaa_scim_users_admin_password:  (( properties.uaa.scim.users.[0].password || "bosh-will-generate-me" ))
consul_encrypt_key: (( properties.consul.encrypt_keys.[0] || "bosh-will-generate-me" ))
blobstore_admin_users_username: (( properties.blobstore.admin_users.[0].username || "bosh-will-generate-me" ))
blobstore_admin_users_password: (( properties.blobstore.admin_users.[0].password || "bosh-will-generate-me" ))
blobstore_secure_link_secret: (( properties.blobstore.secure_link.secret || "bosh-will-generate-me" ))
blobstore_tls:
  ca: (( properties.blobstore.tls.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.blobstore.tls.cert || "bosh-will-generate-me" ))
  private_key: (( properties.blobstore.tls.key || "bosh-will-generate-me" ))
cc_bridge_cc_uploader:
  ca: (( properties.capi.cc_uploader.cc.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.capi.cc_uploader.cc.client_cert || "bosh-will-generate-me" ))
  private_key: (( properties.capi.cc_uploader.cc.client_key || "bosh-will-generate-me" ))
cc_bridge_tps:
  ca: (( properties.capi.tps.cc.ca_cert || "bosh-will-generate-me" ))
  client_cert:  (( properties.capi.tps.cc.client_cert || "bosh-will-generate-me" ))
  client_key:  (( properties.capi.tps.cc.client_key || "bosh-will-generate-me" ))
cc_bulk_api_password: (( properties.cc.bulk_api_password || "bosh-will-generate-me" ))
cc_database_password: (( properties.ccdb.roles.[0].password || "bosh-will-generate-me" ))
cc_database_username: (( properties.ccdb.roles.[0].name || "bosh-will-generate-me" ))
cc_db_encryption_key: (( properties.cc.db_encryption_key || "bosh-will-generate-me" ))
cc_internal_api_password: (( properties.cc.internal_api_password || "bosh-will-generate-me" ))
cc_staging_upload_password: (( properties.cc.staging_upload_password || "bosh-will-generate-me" ))
cc_tls:
  ca: (( properties.cc.mutual_tls.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.cc.mutual_tls.public_cert || "bosh-will-generate-me" ))
  private_key: (( properties.cc.mutual_tls.private_key || "bosh-will-generate-me" ))
consul_agent:
  ca: (( properties.consul.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.consul.agent_cert || "bosh-will-generate-me" ))
  private_key: (( properties.consul.agent_key || "bosh-will-generate-me" ))
consul_agent_ca:
  ca: (( properties.consul.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.consul.ca_cert || "bosh-will-generate-me" ))
consul_server:
  ca: (( properties.consul.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.consul.server_cert || "bosh-will-generate-me" ))
  private_key: (( properties.consul.server_key || "bosh-will-generate-me" ))
diego_auctioneer_client:
  ca: (( properties.diego.bbs.auctioneer.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.diego.bbs.auctioneer.client_cert || "bosh-will-generate-me" ))
  private_key: (( properties.diego.bbs.auctioneer.client_key || "bosh-will-generate-me" ))
diego_auctioneer_server:
  ca: (( properties.diego.bbs.auctioneer.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.diego.bbs.auctioneer.server_cert || "bosh-will-generate-me" ))
  private_key: (( properties.diego.bbs.auctioneer.server_key || "bosh-will-generate-me" ))
diego_bbs_client:
  ca: (( properties.diego.bbs.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.diego.bbs.client_cert || "bosh-will-generate-me" ))
  private_key: (( properties.diego.bbs.client_key || "bosh-will-generate-me" ))
diego_bbs_encryption_keys_passphrase: (( properties.diego.bbs.encryption_keys.[0].passphrase || "bosh-will-generate-me" ))
diego_bbs_server:
  ca: (( properties.diego.bbs.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.diego.bbs.server_cert || "bosh-will-generate-me" ))
  private_key: (( properties.diego.bbs.server_key || "bosh-will-generate-me" ))
diego_database_password: (( properties.diego.bbs.sql.db_password || "bosh-will-generate-me" ))
diego_rep_agent:
  ca: (( properties.diego.rep.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.diego.rep.server_cert || "bosh-will-generate-me" ))
  private_key: (( properties.diego.rep.server_key || "bosh-will-generate-me" ))
diego_rep_client:
  ca: (( properties.diego.rep.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.diego.rep.client_cert || "bosh-will-generate-me" ))
  private_key: (( properties.diego.rep.client_key || "bosh-will-generate-me" ))
diego_ssh_proxy_host_key:
  private_key: (( properties.diego.ssh_proxy.host_key || "bosh-will-generate-me" ))
  public_key_fingerprint: (( properties.app_ssh.host_key_fingerprint || "bosh-will-generate-me" ))
dropsonde_shared_secret: (( properties.doppler_endpoint.shared_secret || "bosh-will-generate-me" ))
etcd_ca:
  ca: (( properties.etcd.ca_cert || "bosh-will-generate-me" ))
etcd_client:
  ca: (( properties.etcd.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.etcd.client_cert || "bosh-will-generate-me" ))
  private_key: (( properties.etcd.client_key || "bosh-will-generate-me" ))
etcd_peer:
  ca: (( properties.etcd.peer_ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.etcd.peer_cert || "bosh-will-generate-me" ))
  private_key: (( properties.etcd.peer_key || "bosh-will-generate-me" ))
etcd_peer_ca:
  ca: (( properties.etcd.peer_ca_cert || "bosh-will-generate-me" ))
etcd_server:
  ca: (( properties.etcd.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.etcd.server_cert || "bosh-will-generate-me" ))
  private_key: (( properties.etcd.server_key || "bosh-will-generate-me" ))
loggregator_ca:
  ca: (( properties.loggregator.tls.ca_cert || "bosh-will-generate-me" ))
loggregator_tls_doppler:
  ca: (( properties.loggregator.tls.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.loggregator.tls.doppler.cert || "bosh-will-generate-me" ))
  private_key: (( properties.loggregator.tls.doppler.key || "bosh-will-generate-me" ))
loggregator_tls_metron:
  ca: (( properties.loggregator.tls.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.loggregator.tls.metron.cert || "bosh-will-generate-me" ))
  private_key: (( properties.loggregator.tls.metron.key || "bosh-will-generate-me" ))
loggregator_tls_statsdinjector:
  ca: (( properties.loggregator.tls.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.loggregator.tls.statsd_injector.cert || "bosh-will-generate-me" ))
  private_key: (( properties.loggregator.tls.statsd_injector.key || "bosh-will-generate-me" ))
loggregator_tls_syslogdrainbinder:
  ca: (( properties.loggregator.tls.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.loggregator.tls.syslogdrainbinder.cert || "bosh-will-generate-me" ))
  private_key: (( properties.loggregator.tls.syslogdrainbinder.key || "bosh-will-generate-me" ))
loggregator_tls_tc:
  ca: (( properties.loggregator.tls.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.loggregator.tls.trafficcontroller.cert || "bosh-will-generate-me" ))
  private_key: (( properties.loggregator.tls.trafficcontroller.key || "bosh-will-generate-me" ))
nats_password: (( properties.nats.password || "bosh-will-generate-me" ))
router_route_services_secret: (( properties.router.route_services_secret || "bosh-will-generate-me" ))
router_ssl:
  certificate: (( properties.router.ssl_cert || "bosh-will-generate-me" ))
  private_key: (( properties.router.ssl_key || "bosh-will-generate-me" ))
router_status_password: (( properties.router.status.password || "bosh-will-generate-me" ))
service_cf_internal_ca:
  ca: (( properties.blobstore.tls.ca_cert))
  certificate: (( properties.blobstore.tls.ca_cert))
  private_key: (( properties.blobstore.tls.ca_cert))
uaa_admin_client_secret: (( properties.uaa.admin.client_secret || "bosh-will-generate-me" ))
uaa_ca:
  ca: (( properties.uaa.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.uaa.sslCertificate || "bosh-will-generate-me" ))
  private_key: (( properties.uaa.sslPrivateKey || "bosh-will-generate-me" ))
uaa_clients_cc-routing_secret: (( properties.uaa.clients.cc_routing.secret || "bosh-will-generate-me" ))
uaa_clients_cc-service-dashboards_secret: (( properties.uaa.clients.cc-service-dashboards.secret || "bosh-will-generate-me" ))
uaa_clients_cloud_controller_username_lookup_secret: (( properties.uaa.clients.cloud_controller_username_lookup.secret || "bosh-will-generate-me" ))
uaa_clients_doppler_secret: (( properties.uaa.clients.doppler.secret || "bosh-will-generate-me" ))
uaa_clients_gorouter_secret: (( properties.uaa.clients.gorouter.secret || "bosh-will-generate-me" ))
uaa_clients_ssh-proxy_secret: (( properties.uaa.clients.ssh-proxy.secret || "bosh-will-generate-me" ))
uaa_clients_tcp_emitter_secret: (( properties.uaa.clients.tcp_emitter.secret || "bosh-will-generate-me" ))
uaa_clients_tcp_router_secret: (( properties.uaa.clients.tcp_router.secret || "bosh-will-generate-me" ))
uaa_database_password: (( properties.uaadb.roles.[0].password || "bosh-will-generate-me" ))
uaa_jwt_policy: (( properties.uaa.jwt || "bosh-will-generate-me" ))
uaa_login_saml:
  ca: (( properties.uaa.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.uaa.login.saml.serviceProviderCertificate || "bosh-will-generate-me" ))
  private_key: (( properties.uaa.login.saml.serviceProviderKey || "bosh-will-generate-me" ))
uaa_ssl:
  ca: (( properties.uaa.ca_cert || "bosh-will-generate-me" ))
  certificate: (( properties.uaa.sslCertificate || "bosh-will-generate-me" ))
  private_key: (( properties.uaa.sslPrivateKey || "bosh-will-generate-me" ))

properties:
  app_ssh: (( merge ))
  etcd: (( merge ))
  system_domain: (( merge ))
  uaa: (( merge ))
  uaadb:
    roles: (( merge ))
  consul:
    ca_cert: (( merge ))
    agent_cert: (( merge ))
    agent_key: (( merge ))
    server_cert: (( merge ))
    server_key: (( merge ))
    encrypt_keys: (( merge ))
  blobstore:
    admin_users: (( merge ))
    secure_link:
      secret: (( merge ))
    tls:
      ca_cert: (( merge ))
      cert: (( merge ))
      key: (( merge ))
  capi:
    cc_uploader:
      cc:
        ca_cert: (( merge ))
        client_cert: (( merge ))
        client_key: (( merge ))
    tps:
      cc:
        ca_cert: (( merge ))
        client_cert: (( merge ))
        client_key: (( merge ))
  cc:
    bulk_api_password: (( merge ))
    db_encryption_key: (( merge ))
    internal_api_password: (( merge ))
    staging_upload_password: (( merge ))
    mutual_tls:
      ca_cert: (( merge ))
      public_cert: (( merge ))
      private_key: (( merge ))
  ccdb:
    roles: (( merge ))
  diego:
    bbs: (( merge ))
    rep: (( merge ))
    ssh_proxy: (( merge ))
  doppler_endpoint:
    shared_secret: (( merge ))
  loggregator:
    tls: (( merge ))
  nats:
    password: (( merge ))
  router: (( merge ))
